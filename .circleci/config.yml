version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@8.1.1
  kubernetes: circleci/kubernetes@1.3.0
  aws-eks: circleci/aws-eks@2.2.0
  aws-cli: circleci/aws-cli@3.1.1

jobs:
  configure-role-arn:
    executor: aws-cli/default
    steps:
      - checkout
      - aws-cli/setup:
          profile-name: default
      - aws-cli/role-arn-setup:
          profile-name: circle
          role-arn: 'arn:aws:iam::169893196636:role/circleci'
          source-profile: default
      - run: >-
          aws sts assume-role --role-arn
          "arn:aws:iam::169893196636:role/circleci" --role-session-name
          AWSCLI-Session --profile circle
  test-cluster:
    docker:
      - image: 'cimg/python:3.10'
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
    steps:
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          aws-region: us-east-1
          cluster-authentication-role-arn: arn:aws:iam::169893196636:role/circleci
      - run:
          command: |
            kubectl get services
          name: Test cluster

workflows:
  build_and_push_image:
    jobs:
      - configure-role-arn
        #      - aws-ecr/build-and-push-image:
        #   repo: "${AWS_RESOURCE_NAME_PREFIX}"
        #  tag: "${CIRCLE_SHA1}"
        #  aws-access-key-id: ACCESS_KEY_ID_ENV_VAR_NAME
        #  aws-secret-access-key: SECRET_ACCESS_KEY_ENV_VAR_NAME
        #  aws-cli-version: latest
        #  extra-build-args: '--compress'
        #  no-output-timeout: 20m
        #  platform: linux/amd64
        #          public-registry: false
        #  push-image: true
        #  region: us-east-1
        #  registry-id: AWS_ECR_REGISTRY_ID
        #  skip-when-tags-exist: false
            #- create-job:
            #requires:
            # - aws-ecr/build-and-push-image
      - test-cluster:
          cluster-name: k8s-qa
          requires:
            - configure-role-arn
