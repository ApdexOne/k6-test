version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@8.1.1
  kubernetes: circleci/kubernetes@1.3.0
  aws-eks: circleci/aws-eks@2.2.0
  aws-cli: circleci/aws-cli@3.1.1

jobs:
  deploy-job:
    docker:
      - image: 'cimg/python:3.10'
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
      image-name:
        description: |
          Name of the job's image
        type: string
    steps:
      - checkout
      - aws-cli/setup:
          profile-name: default
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          aws-region: us-east-1
          aws-profile: default
          cluster-authentication-role-arn: "arn:aws:iam::169893196636:role/circleci"
          cluster-context-alias: qa
          install-kubectl: true
      - kubernetes/update-container-image:
          container-image-updates: << parameters.image-name >>
          resource-file-path: job-template.yaml
      - kubernetes/create-or-update-resource:
          resource-file-path: job-template.yaml
      - run:
          command: |
            kubectl get svc
workflows:
  build_and_push_image:
    jobs:
      - aws-ecr/build-and-push-image:
          repo: "${AWS_RESOURCE_NAME_PREFIX}"
          tag: "${CIRCLE_SHA1}"
          aws-access-key-id: ACCESS_KEY_ID_ENV_VAR_NAME
          aws-secret-access-key: SECRET_ACCESS_KEY_ENV_VAR_NAME
          aws-cli-version: latest
          extra-build-args: '--compress'
          no-output-timeout: 20m
          platform: linux/amd64
          public-registry: false
          push-image: true
          region: us-east-1
          registry-id: AWS_ECR_REGISTRY_ID
          skip-when-tags-exist: false
      - deploy-job:
          cluster-name: k8s-qa
          image-name: "${AWS_RESOURCE_NAME_PREFIX}:{CIRCLE_SHA1}"
          requires:
            - aws-ecr/build-and-push-image
